{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _hoistNonReactStatics = require('hoist-non-react-statics');\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _mediaQueryProvider = require('./media-query-provider');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name;\n}\n\nvar withMedia = function withMedia(WrappedComponent) {\n  var MediaQueryWrapper = function (_React$Component) {\n    _inherits(MediaQueryWrapper, _React$Component);\n\n    function MediaQueryWrapper() {\n      _classCallCheck(this, MediaQueryWrapper);\n\n      return _possibleConstructorReturn(this, (MediaQueryWrapper.__proto__ || Object.getPrototypeOf(MediaQueryWrapper)).apply(this, arguments));\n    }\n\n    _createClass(MediaQueryWrapper, [{\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            wrappedRef = _props.wrappedRef,\n            otherProps = _objectWithoutProperties(_props, ['wrappedRef']);\n\n        return _react2.default.createElement(_mediaQueryProvider.MediaContext.Consumer, null, function (media) {\n          return _react2.default.createElement(WrappedComponent, _extends({}, otherProps, {\n            media: media,\n            ref: wrappedRef\n          }));\n        });\n      }\n    }]);\n\n    return MediaQueryWrapper;\n  }(_react2.default.Component);\n\n  MediaQueryWrapper.propTypes = {\n    wrappedRef: _propTypes2.default.func\n  };\n  MediaQueryWrapper.defaultProps = {\n    wrappedRef: undefined\n  };\n  MediaQueryWrapper.displayName = 'withMedia(' + getDisplayName(WrappedComponent) + ')';\n  return (0, _hoistNonReactStatics2.default)(MediaQueryWrapper, WrappedComponent);\n};\n\nexports.default = withMedia;","map":null,"metadata":{},"sourceType":"script"}